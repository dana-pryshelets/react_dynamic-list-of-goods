{"version":3,"sources":["components/GoodsList.jsx","api/goods.js","App.js","index.js"],"names":["GoodsList","goods","className","map","good","key","id","style","color","name","getAll","fetch","then","response","json","get5First","sort","good1","good2","localeCompare","slice","getRedGoods","filter","App","state","allGoods","getAllGoods","getGoods","setState","type","onClick","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAGaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,wBAAIC,UAAU,2BACXD,EAAME,KAAI,SAAAC,GAAI,OACb,wBACEF,UAAU,YACVG,IAAKD,EAAKE,GACVC,MAAO,CAAEC,MAAM,GAAD,OAAKJ,EAAKI,SAEvBJ,EAAKK,W,MCRP,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,kBAAML,IAC5BE,MAAK,SAAAX,GAAK,OAAIA,EACZe,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMR,KAAKU,cAAcD,EAAMT,SACtDW,MAAM,EAAG,OAEDC,EAAc,kBAAMX,IAC9BE,MAAK,SAAAX,GAAK,OAAIA,EAAMqB,QAAO,SAAAlB,GAAI,MAAmB,QAAfA,EAAKI,aCyC5Be,E,4MA9CbC,MAAQ,CACNC,SAAU,I,EAGZC,YAAc,SAACC,GACbA,IAAWf,MAAK,SAACX,GACf,EAAK2B,SAAS,CACZH,SAAUxB,Q,4CAKhB,WAAU,IAAD,OACP,OACE,oCACE,wBAAIC,UAAU,eAAd,yBACA,yBAAKA,UAAU,uCACb,4BACE2B,KAAK,SACLC,QAAS,kBAAM,EAAKJ,YAAYhB,IAChCR,UAAU,2BAHZ,kBAOA,4BACE2B,KAAK,SACLC,QAAS,kBAAM,EAAKJ,YAAYX,IAChCb,UAAU,2BAHZ,sBAOA,4BACE2B,KAAK,SACLC,QAAS,kBAAM,EAAKJ,YAAYL,IAChCnB,UAAU,2BAHZ,mBAQF,kBAAC,EAAD,CAAWD,MAAO8B,KAAKP,MAAMC,gB,GAxCnBO,IAAMC,WCJxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.dc14eab9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = ({ goods }) => (\n  <ul className=\"list-group  text-center\">\n    {goods.map(good => (\n      <li\n        className=\"list-item\"\n        key={good.id}\n        style={{ color: `${good.color}` }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      color: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => getAll()\n  .then(goods => goods\n    .sort((good1, good2) => good1.name.localeCompare(good2.name))\n    .slice(0, 5));\n\nexport const getRedGoods = () => getAll()\n  .then(goods => goods.filter(good => good.color === 'red'));\n","import React from 'react';\nimport { GoodsList } from './components/GoodsList';\nimport './App.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n// or\n// import * as goodsAPI from './api/goods';\n\nclass App extends React.Component {\n  state = {\n    allGoods: [],\n  };\n\n  getAllGoods = (getGoods) => {\n    getGoods().then((goods) => {\n      this.setState({\n        allGoods: goods,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <h1 className=\"text-center\">Dynamic list of Goods</h1>\n        <div className=\"d-flex gap-3 justify-content-center\">\n          <button\n            type=\"button\"\n            onClick={() => this.getAllGoods(getAll)}\n            className=\"btn btn-outline-primary\"\n          >\n            Load All goods\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => this.getAllGoods(get5First)}\n            className=\"btn btn-outline-primary\"\n          >\n            Load 5 first goods\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => this.getAllGoods(getRedGoods)}\n            className=\"btn btn-outline-primary\"\n          >\n            Load red goods\n          </button>\n        </div>\n        <GoodsList goods={this.state.allGoods} />\n      </>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}